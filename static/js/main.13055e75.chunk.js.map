{"version":3,"sources":["components/Section.js","redux/contacts/RTK.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","redux/contacts/contacts-actions.js","components/Filter.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","contactsAPI","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContact","mutation","item","url","method","body","invalidatesTags","deleteContact","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","ContactList","name","number","onClick","onDelete","undefined","refetchOnFocus","data","error","isFetching","filter","useSelector","state","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","length","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","required","onChange","filterContact","createAction","Component","dispatch","useDispatch","changeFilter","useCallback","contactsActions","App","createReducer","_","action","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13055e75.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsAPI = createApi({\n  reducerPath: 'contactsAPI',\n  tagTypes: ['Contacts'],\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://6196d384af46280017e7e2d4.mockapi.io',\n  }),\n  endpoints: builder => ({\n    getContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: result =>\n        result\n          ? [\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\n              { type: 'Contacts' },\n            ]\n          : ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: item => ({\n        url: '/contacts',\n        method: 'POST',\n        body: { ...item },\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: id => ({\n        url: `/contacts/${id}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsAPI;\n","import { useDeleteContactMutation } from 'redux/contacts/RTK';\n\nexport default function ContactList({ id, name, number }) {\n  const [deleteContact] = useDeleteContactMutation();\n\n  const onDelete = id => deleteContact(id);\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { useMemo } from 'react';\nimport ContactListItem from './ContactListItem';\nimport { useGetContactsQuery } from 'redux/contacts/RTK';\n\nexport default function ContactList() {\n  const {\n    data = [],\n    error,\n    isFetching,\n  } = useGetContactsQuery(undefined, {\n    refetchOnFocus: true,\n  });\n\n  const filter = useSelector(state => state.filter);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, data]);\n\n  if (error) return <h1>Sory, we have some troubles: {error.data}</h1>;\n\n  return (\n    <>\n      {isFetching && <h1>Loading...</h1>}\n\n      <ul>\n        {!isFetching &&\n          filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </ul>\n      {data.length === 0 && !isFetching && (\n        <h1>There are no contacts in phonebook!</h1>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contacts/RTK';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data = [] } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    data.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : addContact(item);\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContact = createAction('contacts/filterContact');\n","import { v4 as uuidv4 } from 'uuid';\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions } from 'redux/contacts';\n// import { filterContact } from 'redux/contacts/filterSlice';\n\nexport default function Component() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const changeFilter = useCallback(\n    e => {\n      dispatch(contactsActions.filterContact(e.target.value));\n      // dispatch(filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n","import './App.css';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n// import Test from './components/Test';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        {/* <Test /> */}\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport { contactsActions } from '.';\n\nexport const filter = createReducer('', {\n  [contactsActions.filterContact]: (_, action) => action.payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { contactsAPI } from './contacts/RTK';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { filter } from './contacts/contacts-reducers';\n// import { filter } from './contacts/filterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsAPI.reducerPath]: contactsAPI.reducer,\n    filter,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(contactsAPI.middleware),\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}